#pragma once

typedef unsigned char byte;

class AES128
{
public:
	AES128(void);
	~AES128(void);

	void encrypt(byte key[4][4],byte pt[4][4]){
	
		/* pre-defined sbox taken from Cryptography and Network Security 5thE(2011) W.Stallings*/
		byte sbox[16][16]={{0x63,0x7c,0x77,0x7b,0xf2,0x6b,0x6f,0xc5,0x30,0x01,0x67,0x2b,0xfe,0xd7,0xab,0x76},{0xca,0x82,0xc9,0x7d,0xfa,0x59,0x47,0xf0,0xad,0xd4,0xa2,0xaf,0x9c,0xa4,0x72,0xc0},{0xb7,0xfd,0x93,0x26,0x36,0x3f,0xf7,0xcc,0x34,0xa5,0xe5,0xf1,0x71,0xd8,0x31,0x15},{0x04,0xC7,0x23,0xC3,0x18,0x96,0x05,0x9A,0x07,0x12,0x80,0xE2,0xEB,0x27,0xB2,0x75},{},{},{},{},{},{},{},{},{},{},{},{} }; // in hexadecimal
		
	
	}

	void decrypt(byte key[4][4],byte ct[4][4]);
	
	
};

